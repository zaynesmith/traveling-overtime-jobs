// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  // DB column is camelCase "passwordHash" (quoted in SQL), so map to it:
  passwordHash String   @map("passwordHash")
  role         String   @default("jobseeker")

  // Database columns use snake_case created_at / updated_at
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt      @map("updated_at")

  employerProfile  EmployerProfile?
  jobseekerProfile JobseekerProfile?

  @@map("user") // table name is "user"
}

model EmployerProfile {
  id           String   @id @default(uuid()) @db.Uuid
  companyName  String
  officePhone  String?
  mobilePhone  String?
  address1     String?
  address2     String?
  city         String?
  state        String?
  zip          String?
  website      String?
  timezone     String?
  // App expects these, so include them:
  firstName    String?
  lastName     String?
  phone        String?
  location     String?
  notes        String?
  completedAt  DateTime?

  userId       String   @unique @db.Uuid
  user         User     @relation(fields: [userId], references: [id])

  @@map("employerprofile")
}

model JobseekerProfile {
  id         String   @id @default(uuid()) @db.Uuid
  firstName  String?
  lastName   String?
  email      String?
  address1   String?
  address2   String?
  city       String?
  state      String?
  zip        String?
  trade      String?
  resumeUrl  String?
  userId     String   @unique @db.Uuid
  user       User     @relation(fields: [userId], references: [id])

  @@map("jobseekerprofile")
}
